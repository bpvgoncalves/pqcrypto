% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/key_write.R
\name{write_key}
\alias{write_key}
\title{Key Management - Save}
\usage{
write_key(key, path = tempdir(), password = NULL)
}
\arguments{
\item{key}{A key-pair produced by \code{keygen_kyber()}, \code{keygen_dilithium()} or
\code{keygen_sphincs()}, or a private key or public key belonging to such a key-pair.}

\item{path}{A path where the text file(s) containing the key(s) should be saved.
Defaults to the temporary directory. If NULL, the resulting encoded key is printed to the
console.}

\item{password}{A password to be used for private key encryption. If not provided, which is
\strong{not advisable} when saving private keys (or the full key-pair) because the private key will
not be encrypted which is \strong{potentially unsafe}.}
}
\value{
Invisibly the encoded key. Saves it to a file or displays it on the console.
}
\description{
Saves a key-pair, a private key or a public key as a text file.
\strong{NOTE}: While the text file resembles a PEM encoded key, current implementation is not strictly
following RFC7468 (Textual Encodings of PKIX, PKCS, and CMS Structures), RFC5280 (Internet X.509
Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile) and RFC5958
(Asymmetric Key Packages).
}
\examples{
key <- keygen_sphincs()
write_key(key$public, NULL)   # NULL used here to force console output instead of file saving

}
