% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/verify_ml_dsa.R
\name{verify_dilithium}
\alias{verify_dilithium}
\title{Dilithium Digital Signature - Verify}
\usage{
verify_dilithium(message, signature, public_key)
}
\arguments{
\item{message}{The message that has been signed.
As in \code{sign_dilithium()}, message may be interpreted in lax terms. It is
possible to sign any type of R objects, not only text strings.}

\item{signature}{The signature produced by \code{sign_dilithium()}.}

\item{public_key}{The public key created by \code{keygen_dilithium()} that is
paired with the private key used for signing.}
}
\value{
Prints the signature validation outcome and silently returns TRUE
if the signature verifies successfully or FALSE otherwise.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}

Verifies that the signature of a given message is valid.
}
\examples{
key <- keygen_dilithium(2)
important_message <- "Hello world!!"
signature <- sign_dilithium(key$private, important_message)
verify_dilithium(important_message, signature, key$public)
# ->
verify_ml_dsa(important_message, signature, key$public)

}
\keyword{internal}
