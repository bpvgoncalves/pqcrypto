% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decapsulate_ml_kem.R
\name{decap_kyber}
\alias{decap_kyber}
\title{Kyber Shared Secret - Retrieve}
\usage{
decap_kyber(encapsulation, private_key)
}
\arguments{
\item{encapsulation}{Received encapsulation object created by \code{encapsulate_ml_kem()}}

\item{private_key}{Receiver's private key as generated by \code{keygen_ml_kem()}.}
}
\value{
The shared secret
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}
Uses own private key to retrieve the shared secret key created by \code{encapsulate_ml_kem()}.
}
\examples{
key <- keygen_ml_kem(512)
ss1 <- encapsulate_ml_kem(key$public)

ss2 <- decap_kyber(ss1$encapsulation, key$private)
# ->
ss3 <- decapsulate_ml_kem(ss1$encapsulation, key$private)
identical(ss1$shared_secret, ss2)
identical(ss1$shared_secret, ss1)

}
\keyword{internal}
