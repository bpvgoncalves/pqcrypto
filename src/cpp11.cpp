// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// decap_kyber.cpp
cpp11::integers cpp_decap_kyber512(cpp11::integers secret_key, cpp11::integers cipher_text);
extern "C" SEXP _pqcrypto_cpp_decap_kyber512(SEXP secret_key, SEXP cipher_text) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_decap_kyber512(cpp11::as_cpp<cpp11::decay_t<cpp11::integers>>(secret_key), cpp11::as_cpp<cpp11::decay_t<cpp11::integers>>(cipher_text)));
  END_CPP11
}
// encap_kyber.cpp
cpp11::list cpp_encap_kyber512(cpp11::integers pub_key);
extern "C" SEXP _pqcrypto_cpp_encap_kyber512(SEXP pub_key) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_encap_kyber512(cpp11::as_cpp<cpp11::decay_t<cpp11::integers>>(pub_key)));
  END_CPP11
}
// encap_kyber.cpp
cpp11::list cpp_encap_kyber768(cpp11::integers pub_key);
extern "C" SEXP _pqcrypto_cpp_encap_kyber768(SEXP pub_key) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_encap_kyber768(cpp11::as_cpp<cpp11::decay_t<cpp11::integers>>(pub_key)));
  END_CPP11
}
// encap_kyber.cpp
cpp11::list cpp_encap_kyber1024(cpp11::integers pub_key);
extern "C" SEXP _pqcrypto_cpp_encap_kyber1024(SEXP pub_key) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_encap_kyber1024(cpp11::as_cpp<cpp11::decay_t<cpp11::integers>>(pub_key)));
  END_CPP11
}
// keygen_kyber.cpp
cpp11::list cpp_keygen_kyber512();
extern "C" SEXP _pqcrypto_cpp_keygen_kyber512() {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_keygen_kyber512());
  END_CPP11
}
// keygen_kyber.cpp
cpp11::list cpp_keygen_kyber768();
extern "C" SEXP _pqcrypto_cpp_keygen_kyber768() {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_keygen_kyber768());
  END_CPP11
}
// keygen_kyber.cpp
cpp11::list cpp_keygen_kyber1024();
extern "C" SEXP _pqcrypto_cpp_keygen_kyber1024() {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_keygen_kyber1024());
  END_CPP11
}
// sha_3.cpp
integers sha_3_512(integers input);
extern "C" SEXP _pqcrypto_sha_3_512(SEXP input) {
  BEGIN_CPP11
    return cpp11::as_sexp(sha_3_512(cpp11::as_cpp<cpp11::decay_t<integers>>(input)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_pqcrypto_cpp_decap_kyber512",   (DL_FUNC) &_pqcrypto_cpp_decap_kyber512,   2},
    {"_pqcrypto_cpp_encap_kyber1024",  (DL_FUNC) &_pqcrypto_cpp_encap_kyber1024,  1},
    {"_pqcrypto_cpp_encap_kyber512",   (DL_FUNC) &_pqcrypto_cpp_encap_kyber512,   1},
    {"_pqcrypto_cpp_encap_kyber768",   (DL_FUNC) &_pqcrypto_cpp_encap_kyber768,   1},
    {"_pqcrypto_cpp_keygen_kyber1024", (DL_FUNC) &_pqcrypto_cpp_keygen_kyber1024, 0},
    {"_pqcrypto_cpp_keygen_kyber512",  (DL_FUNC) &_pqcrypto_cpp_keygen_kyber512,  0},
    {"_pqcrypto_cpp_keygen_kyber768",  (DL_FUNC) &_pqcrypto_cpp_keygen_kyber768,  0},
    {"_pqcrypto_sha_3_512",            (DL_FUNC) &_pqcrypto_sha_3_512,            1},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_pqcrypto(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
